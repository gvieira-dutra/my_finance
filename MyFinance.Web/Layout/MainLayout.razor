@inherits LayoutComponentBase

<MudThemeProvider
@ref="_mudThemeProvider"
@bind-IsDarkMode="_isDarkMode" 
Theme="Configuration.Theme" />
<MudSnackbarProvider />
<MudPopoverProvider />
<MudDialogProvider/>

<AuthorizeView>
    <Authorized>
        <MudLayout Class="mb-16">
            <MudAppBar>
                <MudIconButton 
                    Icon="@Icons.Material.Filled.Menu" 
                    Color="Color.Inherit"
                    Edge="Edge.Start"
                    OnClick="ToggleDrawer"/>
                My Finance
                <MudSpacer/>
                <MudButton Href="/transactions/new" Variant="Variant.Text"
                Color="Color.Dark"
                StartIcon="@Icons.Material.TwoTone.Add">
                    Add Transaction</MudButton>
                <MudSpacer/>
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
                <MudSwitch 
                    Color="Color.Inherit"
                    @bind-Value="@_isDarkMode"
                    T="bool"
                    Class="ma-4"
                    ThumbIcon="@Icons.Material.TwoTone.Lightbulb"/>
            </MudAppBar>
            <MudDrawer @bind-Open="@_isDrawerOpen">
                <NavMenu/>
            </MudDrawer>
            <MudMainContent Class="mt-4">
                <MudContainer>
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>

    <NotAuthorized>

        <LoginRedirect/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isDrawerOpen = true;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer() 
    => _isDrawerOpen = !_isDrawerOpen;
}